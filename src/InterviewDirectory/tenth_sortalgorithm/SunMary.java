package InterviewDirectory.tenth_sortalgorithm;

/**
 * Created by huali on 2018/4/5.
 */
public class SunMary {
//    1. 从平均时间来看，快速排序是效率最高的，
// 但快速排序在最坏情况下的时间性能不如堆排序和归并排序。
// 而后者相比较的结果是，在n较大时归并排序使用时间较少，但使用辅助空间较多。
//
//2. 上面说的简单排序包括除希尔排序之外的所有冒泡排序、插入排序、简单选择排序。
// 其中直接插入排序最简单，但序列基本有序或者n较小时，直接插入排序是好的方法，
// 因此常将它和其他的排序方法，如快速排序、归并排序等结合在一起使用。
//
//3. 基数排序的时间复杂度也可以写成O(d*n)。
// 因此它最使用于n值很大而关键字较小的的序列。
// 若关键字也很大，而序列中大多数记录的最高关键字均不同，
// 则亦可先按最高关键字不同，将序列分成若干小的子序列，而后进行直接插入排序。
//
//4. 从方法的稳定性来比较，基数排序是稳定的内排方法，
// 所有时间复杂度为O(n^2)的简单排序也是稳定的。
// 但是快速排序、堆排序、希尔排序等时间性能较好的排序方法都是不稳定的。
// 稳定性需要根据具体需求选择。
//
//5. 上面的算法实现大多数是使用线性存储结构，
// 像插入排序这种算法用链表实现更好，省去了移动元素的时间。
// 具体的存储结构在具体的实现版本中也是不同的。
}