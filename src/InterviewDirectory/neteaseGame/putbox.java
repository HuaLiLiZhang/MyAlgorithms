package InterviewDirectory.neteaseGame;

/**
 * Created by huali on 2018/5/25.
 */
public class putbox {
//    大家一定玩过“推箱子”这个经典的游戏。
// 具体规则就是在一个N*M的地图上，
// 有1个玩家、1个箱子、1个目的地以及若干障碍，其余是空地。
// 玩家可以往上下左右4个方向移动，但是不能移动出地图或者移动到障碍里去。
// 如果往这个方向移动推到了箱子，箱子也会按这个方向移动一格，
// 当然，箱子也不能被推出地图或推到障碍里。
// 当箱子被推到目的地以后，游戏目标达成。
// 现在告诉你游戏开始是初始的地图布局，
// 请你求出玩家最少需要移动多少步才能够将游戏目标达成。
//输入描述:
//每个测试输入包含1个测试用例
//第一行输入两个数字N，M表示地图的大小。其中0<N，M<=8。
//接下来有N行，每行包含M个字符表示该行地图。其中 . 表示空地、X表示玩家、*表示箱子、#表示障碍、@表示目的地。
//每个地图必定包含1个玩家、1个箱子、1个目的地。
//
//
//输出描述:
//输出一个数字表示玩家最少需要移动多少步才能将游戏目标达成。当无论如何达成不了的时候，输出-1。
//
//输入例子1:
//4 4
//....
//..*@
//....
//.X..
//6 6
//...#..
//......
//#*##..
//..##.#
//..X...
//.@#...
//
//输出例子1:
//3
//11



    //核心流程：
    //人走到了一个点，需要先判断该点是不是墙，出没出界，是墙或出界就用continue终止该次循环；再判断这个点是不是箱子，若是，那么箱子要与人同样的方向移动一步；最后再判断箱子的位置是否都满足既不是墙，也不出界。
    //
    //开个四维数组visit，前面两维记录人的X、Y，另外两维记录箱子的X、Y。
    //
    //显而易见，这就是一个BFS，何为BFS？请见下方图解：


}